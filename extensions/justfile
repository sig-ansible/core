@help:
    just --list

list-tests:
    #!/usr/bin/env nu
    open "molecule/default/vars/tests.yml"
    | get molecule_tests
    | items {|k, v| $k}
    | str join "\n"

_mol CMD TEST_NAME *ARGS:
    export TEST_NAME="{{TEST_NAME}}" && molecule {{CMD}} {{ARGS}}

_mol_all CMD *ARGS:
    #!/usr/bin/env bash
    set -euxo pipefail
    for T in $(just list-tests); do
      just _mol {{CMD}} "$T" {{ARGS}}
    done

@create TEST_NAME *ARGS:
    just _mol create {{TEST_NAME}} {{ARGS}}

alias prep := prepare

@prepare TEST_NAME *ARGS:
    just _mol prepare {{TEST_NAME}} {{ARGS}}

@converge TEST_NAME *ARGS:
    just _mol converge {{TEST_NAME}} {{ARGS}}

@converge-all *ARGS:
    just _mol_all converge {{ARGS}}

@verify TEST_NAME *ARGS:
    just _mol verify {{TEST_NAME}} {{ARGS}}

@idempotence TEST_NAME *ARGS:
    just _mol idempotence {{TEST_NAME}} {{ARGS}}

destroy *ARGS:
    molecule destroy {{ARGS}}

@recreate TEST_NAME *ARGS: destroy
    just create {{TEST_NAME}} {{ARGS}}

@check TEST_NAME *ARGS:
    just _mol check {{TEST_NAME}} {{ARGS}}

@check-all *ARGS:
    just _mol_all check {{ARGS}}

clean:
    @just destroy
    molecule reset

@test TEST_NAME: clean
    just converge {{TEST_NAME}}
    just verify {{TEST_NAME}}
    just idempotence {{TEST_NAME}}

@test-all *ARGS:
    #!/usr/bin/env bash
    set -euxo pipefail
    for T in $(just list-tests); do
      just test "$T" {{ARGS}}
    done
